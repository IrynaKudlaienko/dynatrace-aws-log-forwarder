{
  "name": "CLOUD_TRAIL",
  "displayName": "Cloud Trail Management Events / Logs",
  "rules": [
    {
      "aws": {
        "logGroup": "aws-cloudtrail-logs-%{DATA:account_id}-%{GREEDYDATA:suffix}",
        "logContentParseAs": "json"
      },
      "sources": [
        {
          "sourceType": "logs",
          "source": "log_group",
          "condition": "$prefix('aws-cloudtrail-logs')"
        }
      ],
      "attributes": [
        {
          "key": "aws.service",
          "pattern": "'cloudtrail'"
        },
        {
          "key": "audit.action",
          "pattern": "log_content_parsed.eventName"
        },
        {
          "key": "audit.identity",
          "pattern": "log_content_parsed.userIdentity.arn"
        },
        {
          "key": "audit.status",
          "description":  "If a field errorCode exists, then return Failure.{errorCode}, else return Succeeded",
          "pattern": "if( errorCode==null, &'Succeeded', &[`Failure`, errorCode] | [? @!=null ] | join('.', @) , @)"
        },


        {
          "key": "dt.source_entity",
          "pattern": "if( log_content_parsed.eventName == 'CreateDBInstance', &dt_meid_rds_v2( format('arn:aws:rds:{}:{}:db:{}', region, account_id, log_content_parsed.responseElements.dBInstanceIdentifier)), &EmptyValue, @ )"
        },
        {
          "key": "dt.source_entity",
          "pattern": "if( log_content_parsed.eventName == 'DeleteDBCluster', &dt_meid_rds_v2( format('arn:aws:rds:{}:{}:db:{}', region, account_id, log_content_parsed.requestParameters.dBInstanceIdentifier)), &EmptyValue, @ )"
        },

        {
          "key": "dt.source_entity",
          "pattern": "if( log_content_parsed.eventName == 'DeleteDBInstance', &EmptyValue, &EmptyValue, @ )"
        },

        {
          "key": "dt.source_entity",
          "pattern": "if( log_content_parsed.eventName == 'DescribeAccountAttributes', &EmptyValue, &EmptyValue, @ )"
        },

        {
          "key": "dt.source_entity",
          "pattern": "if( log_content_parsed.eventName == 'DescribeCertificates', &EmptyValue, &EmptyValue, @ )"
        },

        {
          "key": "dt.source_entity",
          "pattern": "if( log_content_parsed.eventName == 'DescribeCustomAvailabilityZones', &EmptyValue, &EmptyValue, @ )"
        },
        {
          "key": "dt.source_entity",
          "pattern": "if( log_content_parsed.eventName == 'DescribeDBClusterParameterGroups', &EmptyValue, &EmptyValue, @ )"
        },
        {
          "key": "dt.source_entity",
          "pattern": "if( log_content_parsed.eventName == 'DescribeDBClusters', &EmptyValue, &EmptyValue, @ )"
        },
        {
          "key": "dt.source_entity",
          "pattern": "if( log_content_parsed.eventName == 'DescribeDBClusterSnapshots', &EmptyValue, &EmptyValue, @ )"
        },
        {
          "key": "dt.source_entity",
          "pattern": "if( log_content_parsed.eventName == 'DescribeDBEngineVersions', &EmptyValue, &EmptyValue, @ )"
        },
        {
          "key": "dt.source_entity",
          "pattern": "if( log_content_parsed.eventName == 'DescribeDBInstances', &(dt_meid_rds_v2('arn:aws:rds:us-east-1:908047316593:db:belu-metadata-database-1-instance-1')), &EmptyValue, @ )"
        },
        {
          "key": "dt.source_entity",
          "pattern": "if( log_content_parsed.eventName == 'DescribeDBParameterGroups', &EmptyValue, &EmptyValue, @ )"
        },
        {
          "key": "dt.source_entity",
          "pattern": "if( log_content_parsed.eventName == 'DescribeDBSecurityGroups', &EmptyValue, &EmptyValue, @ )"
        },
        {
          "key": "dt.source_entity",
          "pattern": "if( log_content_parsed.eventName == 'DescribeDBSnapshots', &EmptyValue, &EmptyValue, @ )"
        },
        {
          "key": "dt.source_entity",
          "pattern": "if( log_content_parsed.eventName == 'DescribeDBSubnetGroups', &EmptyValue, &EmptyValue, @ )"
        },
        {
          "key": "dt.source_entity",
          "pattern": "if( log_content_parsed.eventName == 'DescribeEvents', &EmptyValue, &EmptyValue, @ )"
        },
        {
          "key": "dt.source_entity",
          "pattern": "if( log_content_parsed.eventName == 'DescribeEventSubscriptions', &EmptyValue, &EmptyValue, @ )"
        },
        {
          "key": "dt.source_entity",
          "pattern": "if( log_content_parsed.eventName == 'DescribeGlobalClusters', &EmptyValue, &EmptyValue, @ )"
        },
        {
          "key": "dt.source_entity",
          "pattern": "if( log_content_parsed.eventName == 'DescribeInstallationMedia', &EmptyValue, &EmptyValue, @ )"
        },

        {
          "key": "dt.source_entity",
          "pattern": "if( log_content_parsed.eventName == 'DescribeOptionGroups', &EmptyValue, &EmptyValue, @ )"
        },

        {
          "key": "dt.source_entity",
          "pattern": "if( log_content_parsed.eventName == 'DescribeOrderableDBInstanceOptions', &EmptyValue, &EmptyValue, @ )"
        },
        {
          "key": "dt.source_entity",
          "pattern": "if( log_content_parsed.eventName == 'DescribeRecommendationGroups', &EmptyValue, &EmptyValue, @ )"
        },
        {
          "key": "dt.source_entity",
          "pattern": "if( log_content_parsed.eventName == 'ListTagsForResource', &(dt_meid_rds_v2( log_content_parsed.requestParameters.resourceName)), &EmptyValue, @ )"
        },
        {
          "key": "dt.source_entity",
          "pattern": "if( log_content_parsed.eventName == 'RebootDBInstance', &dt_meid_rds_v2( format('arn:aws:rds:{}:{}:db:{}', region, account_id, log_content_parsed.requestParameters.dBInstanceIdentifier)), &EmptyValue, @ )"
        },
        {
          "key": "dt.source_entity",
          "pattern": "if( log_content_parsed.eventName == 'DescribeEvents', &EmptyValue, &EmptyValue, @ )"
        },
        {
          "key": "dt.source_entity",
          "pattern": "if( log_content_parsed.eventName == 'RebootDBInstance', &dt_meid_rds_v2( format('arn:aws:rds:{}:{}:db:{}', region, account_id, log_content_parsed.requestParameters.dBInstanceIdentifier)), &EmptyValue, @ )"
        },
        
        
        {
          "key": "dt.source_entity",
          "pattern": "if( log_content_parsed.eventName == 'TODO', &dt_meid_rds_v2( format('arn:aws:rds:{}:{}:db:{}', region, account_id, log_content_parsed.requestParameters.dBInstanceIdentifier)), &EmptyValue, @ )"
        },
        {
          "key": "dt.source_entity",
          "pattern": "if( log_content_parsed.eventName == 'TODO', &(dt_meid_rds_v2( log_content_parsed.requestParameters.TODO_arn )), &EmptyValue, @ )"
        }
      ]
    }
  ]
}
